name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    # login build and push nginx image to docker hub
    - name: Log in to Docker Hub
      run: echo "$DOCKER_HUB_TOKEN" | docker login --username nerdfromhell --password-stdin
      env:
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build the Docker image
      run: |
        IMAGE_NAME=nerdfromhell/yo-nginx
        TAG=latest
        docker build . --file Dockerfile --tag $IMAGE_NAME:$TAG
      working-directory: ./nginx

    - name: Push the Docker image
      run: |
        IMAGE_NAME=nerdfromhell/yo-nginx
        TAG=latest
        docker push $IMAGE_NAME:$TAG

    # Set AWS credentials from GitHub Secrets
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_SANDBOX }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: us-east-1 

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ./Terraform

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./Terraform

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: ./Terraform

      # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
      working-directory: ./Terraform
